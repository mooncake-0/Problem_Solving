# 깊이 우선 탐색 ( 한쪽 노드 깊이 끝까지 갔다가, 하나씩 나오면서 다른 노드로 탐색한다 )
# 넓이 우선 탐색 ( 트리의 depth level 에 따라서 탐색 하는 행위 )

'''

깊이 우선 탐색

전위 순회 : 각 노드에서 하는 일의 순서가, 부모 노드 부터 시작해서 왼쪽 자식, 오른쪽 자식 순서로 방문해서 처리하는 것
중위 순회 : 왼쪽 자식부터 시작해서 -> 부모 노드 -> 오른쪽 자식으로 방문해서 처리
후위 순회 : 왼쪽 자식부터 시작해서 -> 오른쪽 자식 -> 부모 노드 방문해서 처리

'''

import sys


def DFS(node):
    if node > 7:  # 예제
        return
    else:
        print(node)  # DFS 란 함수가 하는 일, 하는 처리
        DFS(node * 2)  # 왼쪽 노드 호출
        DFS(node * 2 + 1)  # 오른쪽 노드 호출
        # 근데 참고로 자식 노드 호출 하는 일반식은 경우에 따라 다른듯. 1부터 시작 하면 위가 맞지만, index 상으로 따지면 2*index + 1, 2*(index+1) 각각임

DFS(1)

'''
전위 순회 (일반적으로 사용)
일
왼 자식
오른 자식

중위 순회 (1이 들어왔어도, DFS(2) 가 먼저있고, 그걸 타면 DFS(4) 가 가장 먼저 나오는 구조) - 중위 순회는 거의 안쓰임
왼 자식
일
오른 자식

후위 순회
왼 자식
오른 자식
일
'''